// <auto-generated />
using System;
using ClinicalTrialsApi;
using ClinicalTrialsApi.Core.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ClinicalTrialsApi.Migrations
{
    [DbContext(typeof(ClinicalTrialsContext))]
    [Migration("20241220114458_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "clinical_trials_status", new[] { "completed", "not_started", "ongoing" });
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ClinicalTrialsApi.Core.Models.ClinicalTrialMetadata", b =>
                {
                    b.Property<string>("TrialId")
                        .HasColumnType("text");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Participants")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<ClinicalTrialStatus>("Status")
                        .HasColumnType("clinical_trials_status");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("TrialId");

                    b.ToTable("ClinicalTrialMetadatas");
                });
#pragma warning restore 612, 618
        }
    }
}
